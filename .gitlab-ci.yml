# Fix potential pre-existing issues
- echo "Preparing Kubernetes cluster..."
- ssh -i ~/.ssh/$SSH_KEY_NAME.pem ubuntu@$MASTER_IP "bash -l -c 'sudo kubectl delete -A ValidatingWebhookConfiguration ingress-nginx-admission || true'"

# Core deployments
- echo "Deploying core infrastructure..."
- |
  ssh -i ~/.ssh/$SSH_KEY_NAME.pem ubuntu@$MASTER_IP "bash -l -c 'cd ~/$REMOTE_DIR &&
  echo \"Creating namespace...\" &&
  sudo kubectl apply -f namespace.yaml &&
  echo \"Applying secrets...\" &&
  sudo kubectl apply -f s3-secret.yaml &&
  echo \"Creating persistent volumes...\" &&
  sudo kubectl apply -f wordpress-pvc.yaml'"

# Database deployment with correct label selector
- echo "Deploying database..."
- |
  ssh -i ~/.ssh/$SSH_KEY_NAME.pem ubuntu@$MASTER_IP "bash -l -c 'cd ~/$REMOTE_DIR &&
  sudo kubectl apply -f mysql-deployment.yaml &&
  echo \"Waiting for MySQL to be ready...\" &&
  timeout $DEPLOYMENT_TIMEOUT bash -c \"until sudo kubectl get pods -n wordpress -l tier=mysql -o jsonpath=\\\"{.items[0].status.phase}\\\" | grep -q Running; do sleep 5; done\" || echo \"MySQL deployment timed out but continuing\" &&
  
  # Fix MySQL service selector to match pod labels
  echo \"Fixing MySQL service selector...\" &&
  sudo kubectl patch svc wordpress-mysql -n wordpress --type=json -p=\\\"{\\\\\"op\\\\\": \\\\\"replace\\\\\", \\\\\"path\\\\\": \\\\\"/spec/selector\\\\\", \\\\\"value\\\\\": {\\\\\"app\\\\\": \\\\\"wordpress-mysql\\\\\", \\\\\"tier\\\\\": \\\\\"mysql\\\\\"}}\\\"\"'"

# Application deployment with correct label selector
- echo "Deploying WordPress application..."
- |
  ssh -i ~/.ssh/$SSH_KEY_NAME.pem ubuntu@$MASTER_IP "bash -l -c 'cd ~/$REMOTE_DIR &&
  sudo kubectl apply -f wordpress-deployment.yaml &&
  echo \"Waiting for WordPress to be ready...\" &&
  timeout $DEPLOYMENT_TIMEOUT bash -c \"until sudo kubectl get pods -n wordpress -l app=wordpress,tier!=mysql -o jsonpath=\\\"{.items[0].status.phase}\\\" | grep -q Running; do sleep 5; done\" || echo \"WordPress deployment timed out but continuing\"'"

# Network configuration
- echo "Configuring network resources..."
- |
  ssh -i ~/.ssh/$SSH_KEY_NAME.pem ubuntu@$MASTER_IP "bash -l -c 'cd ~/$REMOTE_DIR &&
  echo \"Creating services...\" &&
  sudo kubectl apply -f wordpress-service.yaml &&
  sudo kubectl apply -f wordpress-loadbalancer.yaml &&
  echo \"Waiting for services to be assigned IPs...\" &&
  timeout 60 bash -c \"until sudo kubectl get svc wordpress-lb -n wordpress -o jsonpath=\\\"{.spec.clusterIP}\\\" | grep -q -v none; do sleep 2; done\" || echo \"Service IP assignment timed out but continuing\"'"

# Ingress configuration with parameterized host
- echo "Configuring ingress..."
- |
  ssh -i ~/.ssh/$SSH_KEY_NAME.pem ubuntu@$MASTER_IP "bash -l -c 'cd ~/$REMOTE_DIR &&
  echo \"Updating ingress host with current IP...\" &&
  sed -i \"s/host:.*/host: $MASTER_IP.nip.io/g\" wordpress-ingress.yaml &&
  echo \"Waiting for ingress controller to be ready...\" &&
  sleep 15 &&
  sudo kubectl apply -f wordpress-ingress.yaml || echo \"Ingress creation failed but continuing deployment\"'"

- echo "WordPress deployment completed successfully at $(date)!"
