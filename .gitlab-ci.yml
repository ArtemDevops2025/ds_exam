stages:
  - validate
  - deploy
  - verify

variables:
  MASTER_IP: "13.36.178.151"
  SSH_KEY_NAME: "ds_exam_key"
  KUBERNETES_DIR: "kubernetes"
  REMOTE_DIR: "wordpress"

validate:
  stage: validate
  image: alpine:latest  # Changed to alpine which has a shell
  before_script:
    - apk add --no-cache kubectl  # Install kubectl in the alpine image
  script:
    - echo "Validating Kubernetes manifests..."
    - for file in $KUBERNETES_DIR/*.yaml; do kubectl --dry-run=client -f $file; done
    - echo "All Kubernetes manifests are valid!"
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    - if: $CI_COMMIT_BRANCH == "main"
    - if: $CI_COMMIT_BRANCH == "development"

deploy:
  stage: deploy
  image: alpine:latest
  before_script:
    - apk add --no-cache openssh-client bash
    - mkdir -p ~/.ssh
    - echo "$SSH_PRIVATE_KEY" > ~/.ssh/$SSH_KEY_NAME.pem
    - chmod 600 ~/.ssh/$SSH_KEY_NAME.pem
    - echo -e "Host $MASTER_IP\n\tStrictHostKeyChecking no\n" > ~/.ssh/config
  script:
    - echo "Creating remote directory..."
    - ssh -i ~/.ssh/$SSH_KEY_NAME.pem ubuntu@$MASTER_IP "mkdir -p ~/$REMOTE_DIR"
    
    - echo "Transferring Kubernetes manifests..."
    - scp -i ~/.ssh/$SSH_KEY_NAME.pem $KUBERNETES_DIR/*.yaml ubuntu@$MASTER_IP:~/$REMOTE_DIR/
    
    - echo "Applying Kubernetes manifests..."
    - ssh -i ~/.ssh/$SSH_KEY_NAME.pem ubuntu@$MASTER_IP "cd ~/$REMOTE_DIR && \
        sudo kubectl apply -f namespace.yaml && \
        sudo kubectl apply -f s3-secret.yaml && \
        sudo kubectl apply -f wordpress-pvc.yaml && \
        sudo kubectl apply -f mysql-deployment.yaml && \
        sudo kubectl apply -f wordpress-deployment.yaml && \
        sudo kubectl apply -f wordpress-service.yaml && \
        sudo kubectl apply -f wordpress-loadbalancer.yaml"
    
    - echo "WordPress deployment completed successfully!"
  rules:
    - if: $CI_COMMIT_BRANCH == "main"
    - if: $CI_COMMIT_BRANCH == "development"
  environment:
    name: production
    url: http://$MASTER_IP

verify:
  stage: verify
  image: alpine:latest
  before_script:
    - apk add --no-cache openssh-client curl bash
    - mkdir -p ~/.ssh
    - echo "$SSH_PRIVATE_KEY" > ~/.ssh/$SSH_KEY_NAME.pem
    - chmod 600 ~/.ssh/$SSH_KEY_NAME.pem
    - echo -e "Host $MASTER_IP\n\tStrictHostKeyChecking no\n" > ~/.ssh/config
  script:
    - echo "Verifying deployment status..."
    - ssh -i ~/.ssh/$SSH_KEY_NAME.pem ubuntu@$MASTER_IP "sudo kubectl get all -n wordpress"
    
    - echo "Checking WordPress availability..."
    - curl -s --retry 5 --retry-delay 10 -o /dev/null -w "%{http_code}" http://$MASTER_IP | grep -q 200
    
    - echo "Verification completed successfully!"
  rules:
    - if: $CI_COMMIT_BRANCH == "main"
    - if: $CI_COMMIT_BRANCH == "development"
