.monitoring_graf_pro_template:
  before_script:
    - | # Start a single multi-line block here
      set -e # Exit immediately if a command exits with a non-zero status.

      echo "Setting up SSH..."
      mkdir -p ~/.ssh
      echo "$SSH_PRIVATE_KEY" | tr -d '\r' > ~/.ssh/$SSH_KEY_NAME.pem
      chmod 600 ~/.ssh/$SSH_KEY_NAME.pem

      echo "Determining MASTER_IP..."
      if [ -z "$MASTER_IP" ]; then
        echo "MASTER_IP is not set directly. Trying to source from terraform.env..."
        if [ -f "terraform/terraform.env" ]; a
          echo "Sourcing MASTER_IP from terraform.env"
          # Use '.' or 'source' carefully in CI scripts; ensure it doesn't exit the script prematurely if the file isn't perfect.
          # Using grep/sed might be safer if the file format is simple and known:
          MASTER_IP_FROM_FILE=$(grep '^MASTER_IP=' terraform/terraform.env | cut -d'=' -f2)
          if [ -n "$MASTER_IP_FROM_FILE" ]; then
              export MASTER_IP="$MASTER_IP_FROM_FILE" # Export it so subsequent commands see it
              echo "MASTER_IP sourced from file."
          fi
        else
           echo "terraform.env not found."
        fi

        if [ -z "$MASTER_IP" ]; then
           echo "Error: MASTER_IP could not be determined."
           exit 1
        fi
      fi

      echo "Using MASTER_IP: $MASTER_IP for monitoring deployment."
      echo -e "Host $MASTER_IP\n\tStrictHostKeyChecking no\n\tUser ubuntu" > ~/.ssh/config
      echo "SSH setup complete."
  script:
    # --- Das 'script:'-Array bleibt wie zuvor ---
    - echo "Creating remote directories for monitoring..."
    # ... (Rest des script-Blocks) ...
    - |
      ssh -i ~/.ssh/$SSH_KEY_NAME.pem ubuntu@$MASTER_IP "bash -l -c '
        echo \"Applying Namespace...\"
        # ... (Rest der SSH-Befehle) ...
        sudo kubectl get all -n monitoring
      '"