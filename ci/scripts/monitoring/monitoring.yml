.monitoring_template:
  before_script:
    - mkdir -p ~/.ssh
    - echo "$SSH_PRIVATE_KEY" > ~/.ssh/$SSH_KEY_NAME.pem
    - chmod 600 ~/.ssh/$SSH_KEY_NAME.pem
    - echo -e "Host $MASTER_IP\n\tStrictHostKeyChecking no\n" > ~/.ssh/config
  script:
    - ssh -i ~/.ssh/$SSH_KEY_NAME.pem ubuntu@$MASTER_IP "mkdir -p ~/$MONITORING_DIR/prometheus ~/$MONITORING_DIR/grafana"
    - scp -i ~/.ssh/$SSH_KEY_NAME.pem $KUBERNETES_DIR/monitoring/monitoring-namespace.yaml ubuntu@$MASTER_IP:~/$MONITORING_DIR/
    - scp -i ~/.ssh/$SSH_KEY_NAME.pem $KUBERNETES_DIR/monitoring/prometheus/*.yaml ubuntu@$MASTER_IP:~/$MONITORING_DIR/prometheus/
    - scp -i ~/.ssh/$SSH_KEY_NAME.pem $KUBERNETES_DIR/monitoring/grafana/*.yaml ubuntu@$MASTER_IP:~/$MONITORING_DIR/grafana/
    - >
      ssh -i ~/.ssh/$SSH_KEY_NAME.pem ubuntu@$MASTER_IP "
        sudo kubectl apply -f ~/$MONITORING_DIR/monitoring-namespace.yaml &&
        sudo kubectl apply -f ~/$MONITORING_DIR/prometheus/ &&
        sudo kubectl apply -f ~/$MONITORING_DIR/grafana/ &&
        timeout 120 bash -c 'until sudo kubectl get pods -n monitoring -l app=prometheus -o jsonpath=\"{.items[0].status.phase}\" | grep -q Running; do sleep 5; done' ||
        echo 'Prometheus timed out' &&
        timeout 120 bash -c 'until sudo kubectl get pods -n monitoring -l app=grafana -o jsonpath=\"{.items[0].status.phase}\" | grep -q Running; do sleep 5; done' ||
        echo 'Grafana timed out'
      "
    - ssh -i ~/.ssh/$SSH_KEY_NAME.pem ubuntu@$MASTER_IP "sudo kubectl get all -n monitoring"